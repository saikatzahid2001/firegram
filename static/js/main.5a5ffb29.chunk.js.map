{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/Upform.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","lastIndex","name","lastIndexOf","cutFromExtension","slice","length","newFile","Date","now","toString","concat","stRef","ref","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","URL","createdAt","add","ProgressBar","setFile","motion","div","initial","width","animate","Upform","types","type","onChange","e","fileSelected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","docu","push","data","id","ImageGrid","setSelectedImg","map","doc","key","layout","whileHover","opacity","onClick","img","transition","delay","src","alt","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a5ffb29.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAKf-x65UFCdB0jDT8XXrEJisvBLbyKDqA\",\r\n    authDomain: \"photogallery-2e7b1.firebaseapp.com\",\r\n    projectId: \"photogallery-2e7b1\",\r\n    storageBucket: \"photogallery-2e7b1.appspot.com\",\r\n    messagingSenderId: \"789393175112\",\r\n    appId: \"1:789393175112:web:4d8264cd1d24bfe50ede7d\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport {projectStorage, projectFirestore, timestamp}","import { useState, useEffect } from 'react';\r\nimport {projectStorage, projectFirestore, timestamp} from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    useEffect(()=>{\r\n\r\n        const lastIndex = file.name.lastIndexOf('.');\r\n        const cutFromExtension = file.name.slice(lastIndex, file.name.length);\r\n        const newId = Date.now();\r\n        const newIdStr = newId.toString()\r\n        const newFile = newIdStr.concat(cutFromExtension)\r\n\r\n        const stRef = projectStorage.ref(newFile);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        stRef.put(file).on('state_changed', (snap)=>{\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage)\r\n        }, (err)=>{\r\n            setError(err)\r\n        }, async ()=>{\r\n            const URL = await stRef.getDownloadURL();\r\n            setUrl(URL)\r\n            const createdAt = timestamp();\r\n            await collectionRef.add({ URL, createdAt });\r\n        })\r\n\r\n    },[file])\r\n\r\n    return {progress, url, error}\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { progress, url } = useStorage(file);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      setFile(null);\r\n    }\r\n  }, [url, setFile]);\r\n\r\n  return (\r\n    <motion.div className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + '%' }}\r\n    ></motion.div>\r\n  );\r\n} \r\n\r\nexport default ProgressBar;","import React, { useState } from 'react';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst Upform = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const types = ['image/png', 'image/jpeg']\r\n\r\n    const fileHandler = (e) => {\r\n        let fileSelected = e.target.files[0];\r\n        \r\n        if(fileSelected && types.includes(fileSelected.type)){\r\n            setFile(fileSelected);\r\n            setError('');\r\n        }else{\r\n            setFile(null);\r\n            setError('Please select a image file (png or jpeg)');\r\n        }\r\n    }\r\n    return (\r\n        <form>\r\n            <label>\r\n            <input type='file' onChange={fileHandler} />\r\n            <span>+</span>\r\n            </label>\r\n            <div className=\"output\">\r\n                { error && <div className=\"error\">{ error }</div>}\r\n                { file && <div>{ file.name }</div> }\r\n                { !error && file && <ProgressBar file={file} setFile={setFile} /> }\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Upform;","import { useState,useEffect } from 'react';\r\nimport { projectFirestore } from '../firebase/config';\r\n\r\nconst useFirestore = (collection) => {\r\n    const [docs, setDocs] = useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n        const unsub = projectFirestore.collection(collection).orderBy('createdAt', 'desc').onSnapshot(snap => {\r\n                let documents = [];\r\n                snap.forEach(docu => {\r\n                    documents.push({...docu.data(), id: docu.id})\r\n                })\r\n                setDocs(documents);\r\n            })\r\n        \r\n        return () => unsub();\r\n\r\n    },[collection])\r\n\r\n    return { docs }\r\n\r\n}\r\n\r\nexport default useFirestore;","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n  const { docs } = useFirestore('images');\r\n\r\n  return (\r\n    <div className=\"img-grid\">\r\n      {docs && docs.map(doc => (\r\n        <motion.div className=\"img-wrap\" key={doc.id} layout whileHover={{ opacity: 1 }} onClick={() => setSelectedImg(doc.URL)}>\r\n          <motion.img initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ delay: 1 }} src={doc.URL} alt=\"uploaded pic\"/>\r\n        </motion.div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageGrid; ","import React from 'react';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst Modal = ({ setSelectedImg, selectedImg }) => {\r\n\r\n  const handleClick = (e) => {\r\n    if (e.target.classList.contains('backdrop')) {\r\n      setSelectedImg(null);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <motion.div className=\"backdrop\" onClick={handleClick}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n    >\r\n      <motion.img src={selectedImg} alt=\"enlarged pic\" \r\n        initial={{ y: \"-100vh\" }}\r\n        animate={{ y: 0 }}\r\n      />\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default Modal; ","import React , {useState} from 'react';\nimport Title from './comps/Title';\nimport Upform from './comps/Upform';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\n\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n  return (\n    <div className=\"App\">\n      <Title/>\n      <Upform />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      { selectedImg && (\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}